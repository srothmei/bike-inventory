services:
  # Main bike-inventory service
  bike-inventory:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bike-inventory
    # Expose only to internal network, not directly to host
    expose:
      - "8501"
    volumes:
      # Mount the database and images directory for persistence
      - bike_data:/app/static/images
      - bike_db:/app
    environment:
      - TZ=${TZ:-Europe/Berlin}
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=${STREAMLIT_BROWSER_GATHER_USAGE_STATS:-false}
      - STREAMLIT_THEME_PRIMARY_COLOR=${STREAMLIT_THEME_PRIMARY_COLOR:-#FF4B4B}
      # Proxy configuration
      - STREAMLIT_SERVER_ENABLE_CORS=true
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_WEBSOCKET_COMPRESSION=true
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=200
      - STREAMLIT_SERVER_RUN_ON_SAVE=false
      # WebRTC settings
      - STREAMLIT_CLIENT_TOOLBAR_ITEMS=["fullscreen"]
      - STREAMLIT_CLIENT_ALLOW_SAME_ORIGIN=true
    restart: always
    networks:
      - bike_network
    # Add resource limits to ensure stability
    deploy:
      resources:
        limits:
          cpus: '${DOCKER_LIMIT_CPU:-1}'
          memory: ${DOCKER_LIMIT_MEMORY:-1G}
        reservations:
          cpus: '${DOCKER_RESERVE_CPU:-0.25}'
          memory: ${DOCKER_RESERVE_MEMORY:-512M}
    # Add healthcheck to ensure application is running
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # NGINX reverse proxy with SSL
  nginx:
    image: nginx:stable-alpine
    container_name: bike-inventory-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/bike-inventory.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - bike-inventory
    restart: always
    networks:
      - bike_network

  # Optional: Add Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval ${WATCHTOWER_INTERVAL:-86400} --cleanup
    restart: always
    environment:
      - TZ=${TZ:-Europe/Berlin}
    depends_on:
      - bike-inventory

volumes:
  bike_data:
    name: bike_inventory_images
  bike_db:
    name: bike_inventory_db

networks:
  bike_network:
    name: bike_inventory_network
    driver: bridge
